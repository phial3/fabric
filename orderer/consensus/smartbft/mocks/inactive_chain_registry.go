// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	common "github.com/hyperledger/fabric-protos-go/common"
	mock "github.com/stretchr/testify/mock"
)

// InactiveChainRegistry is an autogenerated mock type for the InactiveChainRegistry type
type InactiveChainRegistry struct {
	mock.Mock
}

// Stop provides a mock function with given fields:
func (_m *InactiveChainRegistry) Stop() {
	_m.Called()
}

// TrackChain provides a mock function with given fields: chainName, genesisBlock, createChain
func (_m *InactiveChainRegistry) TrackChain(chainName string, genesisBlock *common.Block, createChain func()) {
	_m.Called(chainName, genesisBlock, createChain)
}

type mockConstructorTestingTNewInactiveChainRegistry interface {
	mock.TestingT
	Cleanup(func())
}

// NewInactiveChainRegistry creates a new instance of InactiveChainRegistry. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInactiveChainRegistry(t mockConstructorTestingTNewInactiveChainRegistry) *InactiveChainRegistry {
	mock := &InactiveChainRegistry{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
