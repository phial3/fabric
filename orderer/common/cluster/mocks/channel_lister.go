// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	cluster "github.com/hyperledger/fabric/orderer/common/cluster"
	mock "github.com/stretchr/testify/mock"
)

// ChannelLister is an autogenerated mock type for the ChannelLister type
type ChannelLister struct {
	mock.Mock
}

// Channels provides a mock function with given fields:
func (_m *ChannelLister) Channels() []cluster.ChannelGenesisBlock {
	ret := _m.Called()

	var r0 []cluster.ChannelGenesisBlock
	if rf, ok := ret.Get(0).(func() []cluster.ChannelGenesisBlock); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]cluster.ChannelGenesisBlock)
		}
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *ChannelLister) Close() {
	_m.Called()
}

type mockConstructorTestingTNewChannelLister interface {
	mock.TestingT
	Cleanup(func())
}

// NewChannelLister creates a new instance of ChannelLister. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewChannelLister(t mockConstructorTestingTNewChannelLister) *ChannelLister {
	mock := &ChannelLister{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
